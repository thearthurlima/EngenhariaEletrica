/*Dada uma string, caso encontre um palíndromo
  substituir por '*' usando no mínimo 3 funções.*/

#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define MAX 100

/*void acharPalavra(char string[MAX], int posicaoInicial; int *primLetra, int *ultLetra) {
	
	for(int i = posicaoInicial; string[i] != '\0'; i++) {
		if(string[i] != ' ' && string[i] != '\n') {
			primLetra = i;
			for(int j = 0; string[i + j] != ' ' && string[i + j] != '\n' && string[i + j] != '\0') {
				ultLetra = j + i;
			}
		}
	}
	
}*/

int isPalindrome(char string[MAX], int primLetra, int ultLetra) {
	int tamPalavra, flag = 1;
	
	flag = 1;
	for(int i = 0; i < tamPalavra / 2; i++) {
		if(string[primLetra + i] != string[ultLetra - i]) {
			flag = 0;
			break;
		}
	}
	
	return flag;
}

void censorWord(char string[MAX], int primLetra, int ultLetra) {
	char stringAux[MAX];
	int i, j;
	
	for(i = 0, j = 0; string[i] != '\0'; i++, j++) {
		if(i == primLetra) {
			stringAux[i] = '*';
			i = ultLetra+1;
			j++;
		}
		
		stringAux[j] = string[i];
	}
	
	stringAux[j] = '\0';
	
	printf("\n\n%s", stringAux);
	
}
int main() {
	int primLetra, ultLetra;
	char string[] = "arara ovo de arara";
	
	censorWord(string, 6, 8);
	
}
