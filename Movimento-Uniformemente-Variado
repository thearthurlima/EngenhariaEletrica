programa
{
	inclua biblioteca Matematica --> Mt
	
	funcao inicio()
	{		
		real velocidadeEmMS, velocidadeInicialEmMS, espacoInicialEmM, aceleracaoEmMS2, tempoEmS
		real delta, instanteNaOrigem1, instanteNaOrigem2
		cadeia tipoDeMovimento

		escreva("Entre com a velocidade inicial do móvel (em metros por segundo), o espaço inicial (em metros), \na aceleração (em metros por segundo ao quadrado) e o tempo (em segundos): ")
		leia(velocidadeInicialEmMS, espacoInicialEmM, aceleracaoEmMS2, tempoEmS)
		
		//Processamento
		velocidadeEmMS = velocidadeInicialEmMS + (aceleracaoEmMS2 * tempoEmS)
		
		delta = Mt.potencia(velocidadeInicialEmMS, 2.0) - (4 * 0.5 * aceleracaoEmMS2 * espacoInicialEmM)
		instanteNaOrigem1 = (- velocidadeInicialEmMS + Mt.raiz(delta, 2.0)) / (2 * 0.5 * aceleracaoEmMS2)
		instanteNaOrigem2 = (- velocidadeInicialEmMS - Mt.raiz(delta, 2.0)) / (2 * 0.5 * aceleracaoEmMS2)

		logico movimentoEAcelerado = velocidadeEmMS >= 0 e aceleracaoEmMS2 >= 0

		se(velocidadeEmMS > 0 e aceleracaoEmMS2 > 0)
		{
			tipoDeMovimento = "acelerado"
		}
		senao se(velocidadeEmMS < 0 e aceleracaoEmMS2 < 0)
		{
			tipoDeMovimento = "retardado"
		}
		senao
		{
			tipoDeMovimento = "inexistente"
		}

		//Saída
		escreva ("\nA função horária da velocidade para os valores é: v = ", velocidadeInicialEmMS, " + ", aceleracaoEmMS2, " * t")
		escreva("\nA velocidade no instante t é: ", velocidadeEmMS)
		escreva("\nO movimento é ", tipoDeMovimento, ".")
		se(instanteNaOrigem1 >= 0 e instanteNaOrigem2 >= 0)
		{
			escreva("\nO móvel passa pela origem no instante t = ", instanteNaOrigem1, " e t = ", instanteNaOrigem2, "\n")
		}
		senao se(instanteNaOrigem1 < 0 e instanteNaOrigem2 >= 0)
		{
			escreva("\nO móvel passa pela origem no instante t = ", instanteNaOrigem2, "\n")
		}
		senao
		{
			escreva("\nO móvel passa pela origem no instante t = ", instanteNaOrigem1, "\n")
		}
	}
}
